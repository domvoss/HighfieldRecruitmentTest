{"ast":null,"code":"import { __decorate, __param } from \"tslib\";\nimport { Component, Inject } from '@angular/core';\nlet HomeComponent = class HomeComponent {\n  constructor(http, baseUrl) {\n    this.UserData = [];\n    http.get(baseUrl + 'weatherforecast').subscribe(result => {\n      this.UserData = result;\n    }, error => console.error(error));\n  }\n};\nHomeComponent = __decorate([Component({\n  //selector: 'app-home',\n  //templateUrl: './home.component.html',\n  selector: 'app-fetch-data',\n  templateUrl: './fetch-data.component.html'\n}), __param(1, Inject('BASE_URL'))], HomeComponent);\nexport { HomeComponent };","map":{"version":3,"mappings":";AAAA,SAASA,SAAS,EAAEC,MAAM,QAAQ,eAAe;AAU1C,IAAMC,aAAa,GAAnB,MAAMA,aAAa;EAGxBC,YAAYC,IAAgB,EAAsBC,OAAe;IAF1D,aAAQ,GAAsB,EAAE;IAGrCD,IAAI,CAACE,GAAG,CAAoBD,OAAO,GAAG,iBAAiB,CAAC,CAACE,SAAS,CAACC,MAAM,IAAG;MAC1E,IAAI,CAACC,QAAQ,GAAGD,MAAM;IACxB,CAAC,EAAEE,KAAK,IAAIC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC,CAAC;EACnC;CACD;AARYR,aAAa,eAPzBF,SAAS,CAAC;EACT;EACA;EACAY,QAAQ,EAAE,gBAAgB;EAC1BC,WAAW,EAAE;CACd,CAAC,EAK+BC,iBAAM,CAAC,UAAU,CAAC,IAHtCZ,aAAa,CAQzB;SARYA,aAAa","names":["Component","Inject","HomeComponent","constructor","http","baseUrl","get","subscribe","result","UserData","error","console","selector","templateUrl","__param"],"sourceRoot":"","sources":["G:\\My Projects\\HighfieldRecruitmentTest\\HighfieldRecruitmentTestApp\\HighfieldRecruitmentTestApp\\ClientApp\\src\\app\\home\\home.component.ts"],"sourcesContent":["import { Component, Inject } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Component({\r\n  //selector: 'app-home',\r\n  //templateUrl: './home.component.html',\r\n  selector: 'app-fetch-data',\r\n  templateUrl: './fetch-data.component.html'\r\n})\r\n\r\nexport class HomeComponent {\r\n  public UserData: WeatherForecast[] = [];\r\n\r\n  constructor(http: HttpClient, @Inject('BASE_URL') baseUrl: string) {\r\n    http.get<WeatherForecast[]>(baseUrl + 'weatherforecast').subscribe(result => {\r\n      this.UserData = result;\r\n    }, error => console.error(error));\r\n  }\r\n}\r\n\r\ninterface WeatherForecast {\r\n  date: string;\r\n  temperatureC: number;\r\n  temperatureF: number;\r\n  summary: string;\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}